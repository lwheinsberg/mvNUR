# Introduction

## Overview

This guide will focus on the application of two multivariate Bayesian software programs: (1) `bnlearn` and (2) `mvBIMBAM`.

**Approach 1:** `bnlearn` - bnlearn is an R package for learning the graphical structure of Bayesian networks,estimating their parameters, and performing some useful inference as described in:

Scutari M, Howell P, Balding DJ, Mackay I. Multiple Quantitative Trait Analysis Using Bayesian Networks. Genetics. 2014 Apr 11;198(1):129--137. PMID: 25236454 PMCID: PMC4174925 DOI: https://doi.org/10.1534/genetics.114.165704

and at:

[www.bnlearn.com](https://www.bnlearn.com/)

Additional details about the method and its interpretation can be found in the [bnlearn chapter](./bnlearn.qmd) of this book (or `01_mvNUR_bnlearn.Rmd` in the [GitHub repository](https://github.com/lwheinsberg/mvNUR)).

**Approach 2:** `mvBIMBAM` - mvBIMBAM implements a terminal-based Bayesian approach for genetic association analysis of multiple related phenotypes, as described in:

Shim H, Chasman DI, Smith JD, Mora S, Ridker PM, Nickerson DA, Krauss RM, Stephens M. A multivariate genome-wide association analysis of 10 LDL subfractions, and their response to statin treatment, in 1868 Caucasians. PLoS One. 2015 Apr 21;10(4):e0120758. doi: https://doi.org/10.1371/journal.pone.0120758. PMID: 25898129; PMCID: PMC4405269.

Stephens M. A unified framework for association analysis with multiple related phenotypes. PLoS One. 2013 Jul 5;8(7):e65245. doi: https://doi.org/10.1371/journal.pone.0065245. Erratum in: PLoS One. 2019 Mar 19;14(3):e0213951. PMID: 23861737; PMCID: PMC3702528.

Additional details about the method and its interpretation can be found in the [mvBIMBAM chapter](./mvbimbam.qmd) of this book (or in `02_mvNUR_mvBIMBAM.Rmd` in the [GitHub repository](https://github.com/lwheinsberg/mvNUR)).

Throughout all markdowns, we have flagged lines that will need to be modified by the user if adapting this code for your own data using `###CUSTOMIZE**` annotation.

Also note that while `bnlearn` is run directly in R, `mvBIMBAM` is a terminal-based program with no point/click desktop app. As such, please note that this example code, particularly the mvBIMBAM approach, requires at least an introductory understanding of R and Unix. Some great introductory R/Unix resources are listed at the end of this document.

## Installation

### bnlearn

You can install bnlearn from [CRAN](https://cran.r-project.org/web/packages/bnlearn/index.html) using:

```         
install.packages("bnlearn")
```

or

```         
install.packages("https://www.bnlearn.com/releases/bnlearn_latest.tar.gz", repos = NULL, type = "source")
```

Check your R version if you are having any issues installing. As of October 2023, bnlearn requires R version 4.2.0 or higher.

### mvBIMBAM

mvBIMBAM is designed to be installed from [GitHub](https://github.com/heejungshim/mvBIMBAM). The binary executable file for Linux is in the `https://github.com/heejungshim/mvBIMBAM/bin/` directory while a zip file of the binary executable file, source code, and example input files for Mac is in `https://github.com/heejungshim/mvBIMBAM/forMAC` directory. NOTE: The software executable is called 'bimbam', but we refer to the program as 'mvBIMBAM' throughout.

HOWEVER, when developing/testing this tutorial, several of us ran into installation issues for Mac. Ultimately, we had to modify the program's makefile to support installation. We have alerted the mvBIMABM software maintainer of this issue, but have not seen it resolved. As such, we provide a modified Mac download to make this process easier for users of this tutorial (allowable under GNU General Public License (GPLv3+)).

To install mvBIMBAM, please follow the instructions below, which were written with the assumption that users have an introductory understanding of navigating your computer using the terminal/Unix commands. If you are new to Unix navigation via the terminal, please visit this [link](https://macpaw.com/how-to/use-terminal-on-mac) for a brief introduction.

#### Mac

(1) Download [`BIMBAM_multi_pheno_MAC_M1_modified.zip`](https://github.com/lwheinsberg/mvNUR/blob/main/BIMBAM_multi_pheno_MAC_M1_modified.zip) or [`BIMBAM_multi_pheno_MAC_Intel_modified.zip`](https://github.com/lwheinsberg/mvNUR/blob/main/BIMBAM_multi_pheno_MAC_Intel_modified.zip) from our [GitHub repository](https://github.com/lwheinsberg/mvNUR). The former is for newer Apple silicon/M1 macs and the latter is for older macs. If you are not sure which Mac you have, you can click on the apple symbol in the upper left corner of your machine. If you have an Apple silicon, the Chip will be listed as Apple M1 or M2. If you have the Apple Intel, you will see the processor listed as Intel Core i5, i7, or similar.

(2) Unzip the file by double clicking the zipped folder.

(3) Using the terminal, navigate to the newly unzipped mvBIMBAM folder

```         
cd Desktop/BIMBAM_multi_pheno_MAC_M1_modified
pwd 
```

or

```         
cd Desktop/BIMBAM_multi_pheno_MAC_Intel_modified
pwd 
```

For example, on my machine, when I use the `pwd` command (print working directory), my folder is located at: /Users/username/Desktop/BIMBAM_multi_pheno_MAC

(4) Run `make clean` and `make all` terminal commands which will activate the software build automation tool to compile the C++ source code into an executable `bimbam` program.

```         
make clean
make all
```

Note that there is, unfortunately, no obvious sign that install was successful. Installation can be confirmed in step 5.

(5) Move the executable file to system's PATH environment variable, such as /usr/local/bin, so the program can be called from any location (vs. only the folder where the executable file resides). To do this, navigate to the location of the Unix executable file via the terminal and then use the move (`mv`) command.

```         
sudo mv bimbam /usr/local/bin/
```

Confirm that the install/move worked via this command:

```         
which bimbam
```

For example, on my machine, `bimbam` is located at `/usr/local/bin/bimbam` now.

Now if you type

```         
bimbam
```

at the Unix prompt and hit return, it should print out this message:

```         
 BIMBAM version 0.99a, visit http://stephenslab.uchicago.edu for possible update.
 Developed by Yongtao Guan ytguan.at.gmail.com, all rights to be lefted to GNU GPL.
 References: Guan and Stephens (2008), Servin and Stephens (2007), Scheet and Stephens (2006).
 Updated March 14 2009.
```

##### Modification details

If you are interested in more details related to the installation issue, and how we modified the makefile to correct this issue, please see our [installation hack](./InstallationHack.qmd) page of this book or [Installation Appendix](https://github.com/lwheinsberg/mvNUR/tree/main/InstallationAppendix) of the GitHub repository.

##### Troubleshooting

Note that you need to have GSL (GNU Scientific Library) installed on your machine before you can install mvBIMBAM. GSL is an open-source software library that provides a wide range of mathematical and statistical functions for scientific and numerical computing. Please see our [troubleshooting](./Troubleshooting.qmd) page of this book or [Installation Appendix](https://github.com/lwheinsberg/mvNUR/tree/main/InstallationAppendix) of the GitHub repository for tips on getting GSL installed on your machine.

## Synthetic data set overview

To facilitate hands-on learning, a synthetic data set was created for use with this example code. The synthetic data set was created from a study of women with breast cancer (BrCa). This data set contains no real data, but mimics the correlation structure of the true data set. The original data set contained data for 110 participants and included data for 6 symptoms, 3 demographic variables, and 6 SNPs. We created a synthetic version of this data set with fake data for 770 participants for use in this tutorial.

Data set name: [`BrCa_synthetic.csv`](BrCa_synthetic.csv) (see [GitHub repository](https://github.com/lwheinsberg/mvNUR/tree/main/data ) for details).

Variable descriptions:

Symptoms/Outcomes\
-`ID`: Participant ID\
-`EMO_tscore`: Anxiety (PROMIS Anxiety T Score)\
-`bdito`: Depression (Beck's Depression Inventory)\
-`FAT_tscore`: Fatigue (PROMIS Fatigue Score)\
-`paohcif`: Cognitive Function (Patient's Assessment of Own Functioning Inventory - Cognitive Function)\
-`EPSscore`: Sleepiness (Epworth Daytime Sleepiness)\
-`worst_pain`: Pain (Self-reported numeric rating of "average pain")

Demographics/Covariates\
-`age`: Age in years\
-`education`: Education in years\
-`race`: Race (Self-identified, 0=White, 1=Black)

SNPs/Predictors\
-rs #s (SNPs)

```{r}
# Read in a mapping of variable name to informative label
dict <- read.csv("data/BrCa_synthetic_SimpleDict.csv")
pander::pander(dict, "Data dictionary") 
```

## Examples

To prepare the data before running the examples, see our [data prep](./prep.qmd) chapter followed by our [bnlearn](./bnlearn.qmd) and [mvBIMBAM](./mvbimbam.qmd) chapters. Note that `.Rmd` versions of all files are available in our [GitHub repository](https://github.com/lwheinsberg/mvNUR).
